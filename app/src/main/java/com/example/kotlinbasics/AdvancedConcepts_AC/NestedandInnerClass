- Nested class: A class created inside another class. In Kotlin, a nested class is by default STATIC,
  so its data members and member functions can be accessed without creating an object of the class.
  It cannot access the data of the outer class.

- Inner class: A class created inside another class with keyword INNER. In other words, it is a nested
  class which is marked "inner". It cannot be declared inside interfaces or non-inner nested classes.
  The advantage of inner class over nested class is that, it is able to access members of its outer
  class even when it is private.
